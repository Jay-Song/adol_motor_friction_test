clc; clear;

param.m = 980409.3205;
param.b= -1734.899824;
param.xm_zero = 1428;
param.mx_zero = 0;
param.fpass = 0.5; 
param.fs = 1500; 
static = 236.2430145; 

deg0_gear = readTestData( ["deg0_10_gear","deg0_30_gear", "deg0_50_gear", ...
    "deg0_70_gear", "deg0_90_gear", "deg0_110_gear", ...
    "deg0_m10_gear", "deg0_m30_gear", "deg0_m50_gear_2", "deg0_m70_gear_2", ...
    "deg0_m90_gear", "deg0_m110_gear"], param);
% deg180_no_gear = readTestData( ["deg180_10_no_gear","deg180_50_no_gear", ...
%     "deg180_100_no_gear", "deg180_m10_no_gear","deg180_m50_no_gear", ...
%     "deg180_m100_no_gear"], param);
% 
% deg0_gear = readTestData( ["deg0_10_gear", "deg0_30_gear", ...
%     "deg0_50_gear","deg0_70_gear", "deg0_90_gear","deg0_110_gear",...
%     "deg0_m10_gear", "deg0_m30_gear", "deg0_m50_gear", "deg0_m70_gear", ...
%     "deg0_m90_gear", "deg0_m110_gear"], param);

%% Load plot
deg0_gear_fit = getFit(deg0_gear); 
% 
theta = 0:0.01:2*pi;
%  

deg0_10_gear = deg0_gear_fit{1}.fitresult(theta);
deg0_30_gear = deg0_gear_fit{2}.fitresult(theta);
deg0_50_gear = deg0_gear_fit{3}.fitresult(theta);
deg0_70_gear = deg0_gear_fit{4}.fitresult(theta);
deg0_90_gear = deg0_gear_fit{5}.fitresult(theta);
deg0_110_gear = deg0_gear_fit{6}.fitresult(theta);
deg0_m10_gear = deg0_gear_fit{7}.fitresult(theta);
deg0_m30_gear = deg0_gear_fit{8}.fitresult(theta);
deg0_m50_gear = deg0_gear_fit{9}.fitresult(theta);
deg0_m70_gear = deg0_gear_fit{10}.fitresult(theta);
deg0_m90_gear = deg0_gear_fit{11}.fitresult(theta);
deg0_m110_gear = deg0_gear_fit{12}.fitresult(theta);
%%
%% Non-coupler effect
StaticLoadPos = [297.052620911571;296.807949079222;296.563432141104;296.318897244853;296.074170388475;295.829076776152;295.583441177630;295.337088290572;295.089843105293;294.841531271227;294.591979464519;294.341015756090;294.088469979542;293.834174098248;293.577962570965;293.319672715330;293.059145068560;292.796223744710;292.530756787813;292.262596520249;291.991599885691;291.717628785961;291.440550411150;291.160237562368;290.876568966470;290.589429582153;290.298710896776;290.004311213331;289.706135926937;289.404097790296;289.098117167544;288.788122275926;288.474049414792;288.155843181363;287.833456672805;287.506851674102;287.175998831304;286.840877809685;286.501477436433;286.157795827466;285.809840498019;285.457628456683;285.101186282565;284.740550185318;284.375766047770;284.006889450950;283.633985681306;283.257129719975;282.876406213956;282.491909429115;282.103743184938;281.712020771014;281.316864845257;280.918407313884;280.516789193240;280.112160453565;279.704679844843;279.294514704905;278.881840749995;278.466841848036;278.049709774872;277.630643953799;277.209851178715;276.787545321270;276.363947022430;275.939283368872;275.513787554706;275.087698529003;274.661260629674;274.234723204257;273.808340218196;273.382369851233;272.957074082558;272.532718265386;272.109570691650;271.687902147537;271.267985460594;270.850095039187;270.434506405070;270.021495719884;269.611339306393;269.204313165301;268.800692488483;268.400751169508;268.004761312322;267.612992738967;267.225712497239;266.843184369172;266.465668381267;266.093420317355;265.726691235023;265.365726986488;265.010767744856;264.662047536647;264.319793781496;263.984226839918;263.655559570038;263.333996894128;263.019735375850;262.712962809033;262.413857818816;262.122589475991;261.839316925325;261.564189028662;261.297344023535;261.038909198044;260.789000582699;260.547722659913;260.315168091798;260.091417466887;259.876539066389;259.670588650524;259.473609265484;259.285631071501;259.106671192496;258.936733587728;258.775808945823;258.623874601548;258.480894475620;258.346819037831;258.221585293720;258.105116794962;257.997323673635;257.898102700464;257.807337367094;257.724897992410;257.650641852880;257.584413336847;257.526044122649;257.475353380414;257.432147997322;257.396222826087;257.367360956364;257.345334008756;257.329902451034;257.320815936154;257.317813661604;257.320624749592;257.328968647514;257.342555548129;257.361086828822;257.384255509282;257.411746726917;257.443238229255;257.478400882579;257.516899195992;257.558391860073;257.602532299275;257.648969237159;257.697347273565;257.747307472746;257.798487961530;257.850524536494;257.903051279140;257.955701178059;258.008106757008;258.059900707854;258.110716527305;258.160189156326;258.207955621159;258.253655674817;258.296932437967;258.337433038055;258.374809245585;258.408718106402;258.438822568900;258.464792105008;258.486303323874;258.503040577145;258.514696554750;258.520972870128;258.521580633822;258.516241014428;258.504685785838;258.486657859814;258.461911802881;258.430214336601;258.391344820296;258.345095715313;258.291273029959;258.229696744274;258.160201213823;258.082635551732;257.996863988246;257.902766207086;257.800237657962;257.689189844599;257.569550587727;257.441264262453;257.304292009559;257.158611920257;257.004219193983;256.841126268904;256.669362924791;256.488976358009;256.300031228407;256.102609677935;255.896811320869;255.682753205575;255.460569747785;255.230412635424;254.992450705054;254.746869790071;254.493872540823;254.233678216890;253.966522451779;253.692656990375;253.412349399509;253.125882752063;252.833555285073;252.535680032353;252.232584432168;251.924609910585;251.612111441115;251.295457081355;250.975027487328;250.651215406301;250.324425148873;249.995072041169;249.663581858022;249.330390238025;248.995942081419;248.660690931752;248.325098342339;247.989633228502;247.654771206683;247.320993921460;246.988788361573;246.658646166077;246.331062921728;246.006537452760;245.685571104197;245.368667019873;245.056329416330;244.749062853766;244.447371505237;244.151758425289;243.862724819200;243.580769314041;243.306387232719;243.040069872185;242.782303786980;242.533570079275;242.294343696545;242.065092738025;241.846277771045;241.638351158365;241.441756397565;241.256927473568;241.084288225309;240.924251727579;240.777219689007;240.643581867139;240.523715501535;240.417984765770;240.326740239204;240.250318399322;240.189041135452;240.143215284590;240.113132190045;240.099067283574;240.101279691632;240.120011866318;240.155489241561;240.207919915050;240.277494356341;240.364385141579;240.468746715161;240.590715178689;240.730408107459;240.887924394715;241.063344123841;241.256728468626;241.468119621661;241.697540750926;241.944995984526;242.210470423531;242.493930182803;242.795322459650;243.114575630117;243.451599372648;243.806284818844;244.178504730967;244.568113705811;244.974948404532;245.398827807943;245.839553496798;246.296909956499;246.770664905658;247.260569647874;247.766359446092;248.287753918826;248.824457457549;249.376159664461;249.942535809881;250.523247308423;251.117942213120;251.726255726627;252.347810728614;252.982218318424;253.629078372067;254.287980112592;254.958502692869;255.640215789784;256.332680208858;257.035448498265;257.748065571239;258.470069335833;259.200991330984;259.940357367867;260.687688175471;261.442500049363;262.204305502596;262.972613917728;263.746932198901;264.526765422967;265.311617488630;266.100991762603;266.894391721775;267.691321590404;268.491286971366;269.293795470511;270.098357313186;270.904485952003;271.711698664978;272.519517143141;273.327468066796;274.135083669581;274.941902289558;275.747468906541;276.551335664933;277.353062381360;278.152217036419;278.948376249893;279.741125738814;280.530060757797;281.314786521089;282.094918605828;282.870083336022;283.639918146816;284.404071928635;285.162205350829;285.913991164504;286.659114484217;287.397273048308;288.128177457619;288.851551392440;289.567131807526;290.274669105079;290.973927285627;291.664684076763;292.346731039755;293.019873654060;293.683931379820;294.338737698459;294.984140131520;295.620000237921;296.246193589866;296.862609727624;297.469152093499;298.065737945269;298.652298249451;299.228777554777;299.795133846256;300.351338380278;300.897375501201;301.433242439912;301.958949094861;302.474517796112;302.979983052949;303.475391285625;303.960800541838;304.436280198555;304.901910649817;305.357782981157;305.803998631317;306.240669041917;306.667915295782;307.085867744618;307.494665626743;307.894456675607;308.285396719802;308.667649275320;309.041385130767;309.406781926296;309.764023726990;310.113300591425;310.454808136178;310.788747096999;311.115322887397;311.434745155356;311.747227338934;312.052986221430;312.352241486869;312.645215276481;312.932131746878;313.213216630621;313.488696799833;313.758799833528;314.023753589297;314.283785779986;314.539123555972;314.789993093650;315.036619190702;315.279224868710;315.518030983678;315.753255844968;315.985114843166;316.213820087372;316.439580052368;316.662599236118;316.883077828020;317.101211388314;317.317190539019;317.531200666771;317.743421637866;317.954027525858;318.163186351961;318.371059838550;318.577803175976;318.783564802928;318.988486200532;319.192701700347;319.396338306421;319.599515531511;319.802345247582;320.004931550648;320.207370640024;320.409750712005;320.612151867985;320.814646037015;321.017296912739;321.220159904683;321.423282103795;321.626702262148;321.830450786692;322.034549746911;322.239012896233;322.443845707018;322.649045418925;322.854601100462;323.060493723480;323.266696250363;323.473173733680;323.679883427990;323.886774913546;324.093790231564;324.300864030773;324.507923724887;324.714889660686;324.921675296334;325.128187389588;325.334326195515;325.539985673343;325.745053702052;325.949412304315;326.152937878370;326.355501437435;326.556968856214;326.757201124116;326.956054604716;327.153381301057;327.349029126344;327.542842179599;327.734661025828;327.924322980274;328.111662396298;328.296510956451;328.478697966302;328.658050650567;328.834394451102;329.007553326332;329.177350051659;329.343606520437;329.506144045060;329.664783657760;329.819346410670;329.969653674747;330.115527437141;330.256790596593;330.393267256470;330.524783015035;330.651165252567;330.772243414945;330.887849293322;330.997817299525;331.101984736816;331.200192065672;331.292283164229;331.378105583067;331.457510794011;331.530354432622;331.596496534094;331.655801762233;331.708139631259;331.753384720146;331.791416879224;331.822121428813;331.845389349619;331.861117464692;331.869208612685;331.869571812250;331.862122417329;331.846782263193;331.823479803020;331.792150234881;331.752735618958;331.705184984870;331.649454428970;331.585507201518;331.513313783602;331.432851953737;331.344106844061;331.247070986055;331.141744345745;331.028134348350;330.906255892327;330.776131352831;330.637790574562;330.491270854022;330.336616911211;330.173880850785;330.003122112735;329.824407412649;329.637810671631;329.443412935953;329.241302286565;329.031573738545;328.814329130644;328.589677005033;328.357732477429;328.118617097739;327.872458701417;327.619391251700;327.359554672932;327.093094675183;326.820162570386;326.540915080222;326.255514135988;325.964126670727;325.666924403860;325.364083618611;325.055784932505;324.742213061240;324.423556576249;324.100007656240;323.771761833079;323.439017732325;323.101976808762;322.760843077307;322.415822839617;322.067124406796;321.714957818565;321.359534559280;321.001067271193;320.639769465342;320.275855230493;319.909538940523;319.541034960667;319.170557353046;318.798319581901;318.424534218951;318.049412649312;317.673164778406;317.295998740287;316.918120607834;316.539734105229;316.161040323167;315.782237437237;315.403520429891;315.025080816457;314.647106375611;314.269780884744;313.893283860645;313.517790305924;313.143470461586;312.770489566178;312.399007621897;312.029179168069;311.661153062393;311.295072270313;310.931073662917;310.569287823708;310.209838864608;309.852844251541;309.498414639926;309.146653720393;308.797658075040;308.451517044518;308.108312606225;307.768119263876;307.431003948699;307.097025932488;306.766236752736;306.438680150047;306.114392018008;305.793400365690;305.475725292926;305.161378978491;304.850365681294;304.542681754671;304.238315673851;303.937248076638;303.639451817337;303.344892033940;303.053526228537;302.765304360937;302.480168955421;302.198055220563;301.918891181996;301.642597828014;301.369089267858;301.098272902503;300.830049607770;300.564313929536;300.300954290811;300.039853210408;299.780887532947;299.523928669864;299.268842851122;299.015491387253;298.763730941391;298.513413810882;298.264388218078;298.016498609887;297.769585965621;297.523488112688;297.278040049642;297.033074276082];
StaticLoadNeg = [235.876110212149;235.626160646063;235.373212995457;235.117184358812;234.857998596282;234.595586441691;234.329885601052;234.060840837624;233.788404043578;233.512534298350;233.233197913789;232.950368466223;232.664026815607;232.374161111908;232.080766788946;231.783846545871;231.483410316543;231.179475227039;230.872065541558;230.561212597023;230.246954726647;229.929337172798;229.608411989477;229.284237934738;228.956880353399;228.626411050404;228.292908155180;227.956455977379;227.617144854370;227.275070990855;226.930336291006;226.583048183510;226.233319439894;225.881267986550;225.527016710821;225.170693261561;224.812429844546;224.452363013128;224.090633454510;223.727385772028;223.362768263808;222.996932698168;222.630034086138;222.262230451437;221.893682598268;221.524553877274;221.155009949974;220.785218552023;220.415349255593;220.045573231189;219.676063009201;219.306992241462;218.938535463108;218.570867854987;218.204165006882;217.838602681795;217.474356581508;217.111602113674;216.750514160617;216.391266850068;216.034033328022;215.678985533887;215.326293978120;214.976127522486;214.628653163116;214.284035816491;213.942438108499;213.604020166687;213.268939415831;212.937350376929;212.609404469732;212.285249818900;211.965031063890;211.648889172648;211.336961259200;211.029380405203;210.726275485556;210.427770998108;210.133986897559;209.845038433601;209.561035993370;209.282084948268;209.008285505213;208.739732562381;208.476515569505;208.218718392775;207.966419184425;207.719690257047;207.478597962715;207.243202576973;207.013558187776;206.789712589430;206.571707181630;206.359576873672;206.153349993908;205.953048204551;205.758686421911;205.570272742152;205.387808372688;205.211287569304;205.040697579121;204.876018589510;204.717223683085;204.564278798882;204.417142699857;204.275766946827;204.140095878997;204.010066601190;203.885608977941;203.766645634572;203.653091965411;203.544856149292;203.441839172476;203.343934859156;203.251029909668;203.163003946584;203.079729568804;203.001072413818;202.926891228254;202.857037946868;202.791357780103;202.729689310354;202.671864597055;202.617709290713;202.567042756006;202.519678204035;202.475422833845;202.434077983296;202.395439289350;202.359296857862;202.325435442913;202.293634635741;202.263669063288;202.235308596396;202.208318567630;202.182459998739;202.157489837715;202.133161205392;202.109223651550;202.085423420405;202.061503725421;202.037205033298;202.012265357011;201.986420557727;201.959404655442;201.930950148109;201.900788339051;201.868649672417;201.834264076402;201.797361313943;201.757671340600;201.714924669258;201.668852741312;201.619188303965;201.565665793208;201.508021722090;201.445995073820;201.379327699223;201.307764718094;201.231054923899;201.148951191333;201.061210886158;200.967596276773;200.867874946909;200.761820208867;200.649211516661;200.529834878426;200.403483267465;200.269957031228;200.129064297579;199.980621377636;199.824453164496;199.660393527120;199.488285698666;199.307982658547;199.119347507458;198.922253834670;198.716586076812;198.502239867438;198.279122376604;198.047152639739;197.806261875062;197.556393788823;197.297504867633;197.029564657182;196.752556026621;196.466475417935;196.171333079605;195.867153283916;195.553974527237;195.231849712665;194.900846314414;194.561046523354;194.212547373145;193.855460846422;193.489913960514;193.116048832217;192.734022721161;192.344008051344;191.946192410450;191.540778526578;191.127984222072;190.708042344155;190.281200672122;189.847721800880;189.407883000665;188.961976052804;188.510307061434;188.053196241133;187.590977680458;187.123999081437;186.652621475095;186.177218913143;185.698178136016;185.215898217482;184.730790186070;184.243276623666;183.753791241609;183.262778434704;182.770692813614;182.277998716113;181.785169697760;181.292688002566;180.801044014311;180.310735689159;179.822267970317;179.336152185482;178.852905427881;178.373049921760;177.897112373181;177.425623307064;176.959116391417;176.498127749748;176.043195262675;175.594857859802;175.153654802914;174.720124961640;174.294806082681;173.878234053797;173.470942163711;173.073460359139;172.686314500171;172.310025615234;171.945109156872;171.592074259624;171.251423001254;170.923649668597;170.609240029315;170.308670610833;170.022407987716;169.750908078788;169.494615455228;169.253962660914;169.029369546264;168.821242616784;168.629974397554;168.455942814840;168.299510595997;168.161024688820;168.040815701455;167.939197363968;167.856466012623;167.792900097907;167.748759717273;167.724286173571;167.719701560061;167.735208372890;167.770989151837;167.827206150123;167.904001033995;168.001494612772;168.119786599973;168.258955406099;168.419057963587;168.600129584397;168.802183850623;169.025212538493;169.269185576013;169.534051034508;169.819735154193;170.126142403893;170.453155574937;170.800635909201;171.168423261211;171.556336294146;171.964172709531;172.391709510327;172.838703297080;173.304890596720;173.789988223528;174.293693671757;174.815685539293;175.355623981707;175.913151195998;176.487891933225;177.079454039231;177.687429022550;178.311392648566;178.950905558944;179.605513915268;180.274750065816;180.958133234330;181.655170229584;182.365356174552;183.088175253890;183.823101478435;184.569599465388;185.327125232807;186.095127007008;186.873046041445;187.660317445618;188.456371022535;189.260632113227;190.072522446811;190.891460994578;191.716864826567;192.548149969085;193.384732261633;194.226028211684;195.071455845770;195.920435555350;196.772390935903;197.626749617757;198.482944087118;199.340412495839;200.198599458439;201.056956834939;201.914944498091;202.772031083622;203.627694722115;204.481423751233;205.332717406974;206.181086492726;207.026054024928;207.867155854158;208.703941260559;209.535973522533;210.362830457703;211.184104935177;211.999405358233;212.808356116570;213.610598007360;214.405788624369;215.193602714501;215.973732501165;216.745887973948;217.509797144127;218.265206265630;219.011880021121;219.749601672955;220.478173178814;221.197415271911;221.907167505718;222.607288263231;223.297654730878;223.978162837233;224.648727156757;225.309280778886;225.959775142823;226.600179838478;227.230482374067;227.850687910926;228.460818966188;229.060915084022;229.651032476180;230.231243632693;230.801636903570;231.362316052460;231.913399783243;232.455021240615;232.987327485732;233.510478948079;234.024648854733;234.530022638253;235.026797324467;235.515180901458;235.995391671103;236.467657584519;236.932215562836;237.389310804724;237.839196082115;238.282131025611;238.718381401056;239.148218378781;239.571917797038;239.989759421146;240.402026199881;240.809003520631;241.210978464854;241.608239065360;242.001073566925;242.389769691751;242.774613911256;243.155890725671;243.533881952887;243.908866027994;244.281117314904;244.650905431435;245.018494589196;245.384142949580;245.748101997141;246.110615931567;246.471921079453;246.832245327009;247.191807574797;247.550817215540;247.909473636005;248.267965743894;248.626471520633;248.985157600879;249.344178879531;249.703678146935;250.063785752953;250.424619300465;250.786283368839;251.148869267817;251.512454822223;251.877104187807;252.242867698495;252.609781745238;252.977868686585;253.347136791034;253.717580211176;254.089178989529;254.461899095948;254.835692496388;255.210497252759;255.586237653537;255.962824374721;256.340154670700;256.718112594474;257.096569246675;257.475383052738;257.854400067517;258.233454306599;258.612368103519;258.990952491996;259.369007612309;259.746323140832;260.122678741749;260.497844539897;260.871581613648;261.243642506726;261.613771757776;261.981706446523;262.347176755281;262.709906544565;263.069613941552;263.426011940070;263.778809010823;264.127709720505;264.472415358480;264.812624569652;265.148033992177;265.478338898651;265.803233839401;266.122413286522;266.435572277288;266.742407055587;267.042615710039;267.335898807464;267.621960020377;267.900506747222;268.171250724067;268.433908626498;268.688202660500;268.933861141118;269.170619057729;269.398218624809;269.616409817074;269.824950887958;270.023608870396;270.212160058943;270.390390472292;270.558096295307;270.715084299731;270.861172242780;270.996189242884;271.119976131883;271.232385783051;271.333283414360;271.422546866467;271.500066854942;271.565747196341;271.619505007753;271.661270879534;271.690989020987;271.708617378794;271.714127728100;271.707505736161;271.688750998568;271.657877048079;271.614911336192;271.559895187594;271.492883727738;271.413945783800;271.323163759360;271.220633483186;271.106464032566;270.980777531656;270.843708925407;270.695405729634;270.536027757871;270.365746825681;270.184746433156;269.993221426339;269.791377638405;269.579431511412;269.357609699504;269.126148654480;268.885294194658;268.635301058005;268.376432440528;268.108959520941;267.833160972657;267.549322464152;267.257736148789;266.958700145192;266.652518009268;266.339498199006;266.019953533154;265.694200644923;265.362559431828;265.025352502813;264.682904623769;264.335542162584;263.983592534828;263.627383651186;263.267243367729;262.903498940101;262.536476482692;262.166500433838;261.793893028071;261.418973776420;261.042058955750;260.663461108075;260.283488550784;259.902444898654;259.520628598530;259.138332477484;258.755843305255;258.373441371728;257.991400080154;257.609985556823;257.229456277792;256.850062713303;256.472046990426;256.095642574447;255.721073969481;255.348556438727;254.978295744755;254.610487910161;254.245318998883;253.882964918427;253.523591243203;253.167353059132;252.814394829631;252.464850283039;252.118842321520;251.776482951399;251.437873234881;251.103103263034;250.772252149882;250.445388047416;250.122568181288;249.803838906906;249.489235785617;249.178783680627;248.872496872262;248.570379192151;248.272424175862;247.978615233506;247.688925837779;247.403319728886;247.121751135774;246.844165013049;246.570497292955;246.300675151743;246.034617289770;245.772234224597;245.513428596401;245.258095484935;245.006122737310;244.757391305811;244.511775595003;244.269143817307;244.029358356290;243.792276136843;243.557749001465;243.325624091838;243.095744234896;242.867948332584;242.642071754504;242.417946732660;242.195402757507;241.974266974533;241.754364580589;241.535519219226;241.317553374277;241.100288760957;240.883546713766;240.667148570492;240.450916051630;240.234671634557;240.018238921817;239.801443002897;239.584110808890;239.366071459479;239.147156601678;238.927200739810;238.706041556228;238.483520222285;238.259481699128;238.033775027879;237.806253608822;237.576775469228;237.345203519475;237.111405797173;236.875255699006;236.636632200037;236.395420060269;236.151510018266;235.904798971666;235.655190144465;235.402593240949;235.146924586221;234.888107253242;234.626071176399;234.360753251570];

%%
figure(30);
set(gcf,'Position',[600 600 800 500]);
subplot(2,1,1); hold on;
title('Positive Velocity')
plot(theta, deg0_10_gear- StaticLoadPos, '-r', 'LineWidth', 1);
plot(theta, deg0_30_gear- StaticLoadPos, '-g', 'LineWidth', 1);
plot(theta, deg0_50_gear- StaticLoadPos, '-b', 'LineWidth', 1);
plot(theta, deg0_70_gear- StaticLoadPos, '-c', 'LineWidth', 1);
xlabel('Position (rad)');
ylabel('Load (g)');
legend('10', '30', '50', '70');
% plot(theta, deg0_90_gear - StaticLoad, '-r', 'LineWidth', 5);
% plot(theta, deg0_110_gear - StaticLoad, '-b', 'LineWidth', 5);
% 
% figure(4); hold on;
subplot(2,1,2); hold on;
title('Negative Velocity');
plot(theta, deg0_m10_gear- StaticLoadNeg, '-r', 'LineWidth', 1);
plot(theta, deg0_m30_gear- StaticLoadNeg, '-g', 'LineWidth', 1);
plot(theta, deg0_m50_gear- StaticLoadNeg, '-b', 'LineWidth', 1); 
plot(theta, deg0_m70_gear- StaticLoadNeg, '-c', 'LineWidth', 1);
plot(theta, deg0_m90_gear- StaticLoadNeg, '-m', 'LineWidth', 1);
plot(theta, deg0_m110_gear- StaticLoadNeg, '-y', 'LineWidth', 1);
legend('-10', '-30', '-50', '-70', '-90', '-110');

xlabel('Position (rad)');
ylabel('Load (g)');
% hold off;
% 
%% Gear friction coefficinet

c_10 = mean(deg0_10_gear - StaticLoadPos)*4.5*0.0254%/ (10 * 0.114 * 1/60 * 2*pi);
c_30 = mean(deg0_30_gear - StaticLoadPos)*4.5*0.0254%/ (30 * 0.114 * 1/60 * 2*pi);
c_50 = mean(deg0_50_gear- StaticLoadPos)*4.5*0.0254%/ (50 * 0.114 * 1/60 * 2*pi);
c_70 = mean(deg0_70_gear- StaticLoadPos)*4.5*0.0254%/ (70 * 0.114 * 1/60 * 2*pi);

c_m10 = mean(deg0_m10_gear- StaticLoadNeg)*4.5*0.0254% / (10 * 0.114 * 1/60 * 2*pi);
c_m30 = mean(deg0_m30_gear- StaticLoadNeg)*4.5*0.0254 %/ (30 * 0.114 * 1/60 * 2*pi);
c_m50 = mean(deg0_m50_gear- StaticLoadNeg)*4.5*0.0254 %/ (50 * 0.114 * 1/60 * 2*pi);
c_m70 = mean(deg0_m70_gear- StaticLoadNeg)*4.5*0.0254 %/ (70 * 0.114 * 1/60 * 2*pi);
c_m90 = mean(deg0_m90_gear- StaticLoadNeg)*4.5*0.0254 %/ (90 * 0.114 * 1/60 * 2*pi);
c_m110 = mean(deg0_m110_gear- StaticLoadNeg)*4.5*0.0254 %/ (110 * 0.114 * 1/60 * 2*pi);

C_pos = [c_10, c_30, c_50, c_70]* 1e-3*9.81;
C_neg = [c_m110, c_m90, c_m70, c_m50, c_m30,c_m10]* 1e-3*9.81;

a = 0.114 * 1/60 * 2*pi;
P_pos = [ 10*a, 30*a, 50*a, 70*a]
P_neg = [-110*a, -90*a, -70*a, -50*a, -30*a, -10*a]

X_pos = [ones(length(P_pos),1) P_pos'];
X_neg = [ones(length(P_neg),1) P_neg'];

b1 = X_pos\transpose(C_pos);
b2 = X_neg\transpose(C_neg);

x1 = 0:0.01:1.5;
x2 = 0:-0.01:-1.5;

y1 = x1*b1(2) + b1(1);
y2 = x2*b2(2) + b2(1);

figure(5);
set(gcf,'Position',[600 600 800 500]);
scatter([P_neg P_pos], [C_neg, C_pos], 'r'); hold on;

plot(x1,y1,'-k');
plot(x2,y2,'-k');
plot([x2(1) x1(1)], [y2(1) y1(1)], '-k');

xlabel('Velocity (rad/s)');
ylabel('Torque (Nm)');
title('Gear train frictional torque'); 
ylim([-0.05 0.05]);
xlim([-1.5 1.5]);
legend('Data', 'Best fit line','Location','northwest'); 

%%
% %% Current plot
% figure(3) 
% plot(raw_data_gear{1}.xm_current);
%% 

function test_data = readTestData( Speed, param )

for i = 1:length( Speed )
   
    filename = append( Speed(i), '.txt' );
    fileID = fopen(filename);
    data = textscan(fileID, '%f %f %f %f %f %s %f %f %f %s %f %f', 'Delimiter', '\t');
    fclose(fileID);
    
    xm_abs_pos = data{9} - param.xm_zero;
    mx_abs_pos = ( data{12} - param.mx_zero ) ;
    
    % Relative angular position of each motor shaft
    REV2RAD = 2*pi/4096; % revolution to radian conversion 
    xm_rel_pos = mod(xm_abs_pos, 4095) * REV2RAD;
    mx_rel_pos = mod(mx_abs_pos, 4095) * REV2RAD;
    
    % Revolution index
    rev_count_idx = floor(xm_abs_pos/ 4095);
    min_rev_n = min(rev_count_idx); max_rev_n = max(rev_count_idx);
    full_idx = rev_count_idx ~= min_rev_n & rev_count_idx ~= max_rev_n;
    
    force = data{2}*param.m + param.b;
    force_lp = lowpass(force, param.fpass, param.fs);
    
    test_data{i}.time = data{1}(full_idx);
    test_data{i}.force = force(full_idx);
    test_data{i}.force_lp = force_lp(full_idx);
    test_data{i}.rev_idx = rev_count_idx(full_idx);
    test_data{i}.xm_vel = data{8}(full_idx);
    test_data{i}.mx_vel = data{11}(full_idx) * -1;
    test_data{i}.xm_abs_pos = xm_abs_pos(full_idx);
    test_data{i}.mx_abs_pos = mx_abs_pos(full_idx);
    test_data{i}.xm_rel_pos = xm_rel_pos(full_idx);
    test_data{i}.mx_rel_pos = mx_rel_pos(full_idx);
    test_data{i}.xm_current = data{7}(full_idx);
    
    
end

end

% fit data
function data_fit = getFit(data)

for i = 1:length(data)
    x = data{i}.mx_rel_pos;
    y = data{i}.force_lp;
    [fitresult, gof] = createFit(x, y);
    data_fit{i}.fitresult = fitresult;
    data_fit{i}.gof = gof;
end

end
function [fitresult, gof] = createFit(x, y)
%CREATEFIT(X1,Y1)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x1
%      Y Output: y1
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( 'fourier5' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 1.00048851978505];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

end

% function [coupler, non_coupler] = calculateCouplerEffect(data1, data2)
% 
% theta = 0:0.01:2*pi;
% NUM_OF_SPEED = length(data1)
% 
% coupler = zeros(NUM_OF_SPEED, length(theta));
% non_coupler = zeros(NUM_OF_SPEED * 2, length(theta));
% 
% for i = 1:NUM_OF_SPEED
%     coupler(:,i) = ( data{i}.fitresult(theta) + data{i + NUM_OF_SPEED}.fitresult(theta) ) * 0.5;
%     non_coupler(:,i) = data{i}.fitresult(theta) - coupler(:,i);
%     non_coupler(:,i + NUM_OF_SPEED) = data{i + NUM_OF_SPEED}.fitresult(theta) - coupler(:,i);
% end
% 
% end